version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lotto-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    env_file:
      - ./backend/.env.docker
    environment:
      NODE_ENV: production
      PORT: 3001
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Enable access to host
    networks:
      - lotto-network
    volumes:
      - ./backend/uploads:/app/uploads
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: /api
    container_name: lotto-frontend
    restart: unless-stopped
    expose:
      - "80"
    environment:
      VITE_API_URL: /api
    depends_on:
      - backend
    networks:
      - lotto-network

  # Ngrok for Both Frontend and Backend
  ngrok:
    image: ngrok/ngrok:latest
    container_name: lotto-ngrok
    restart: unless-stopped
    command:
      - "start"
      - "lotto-app"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./ngrok/ngrok.yml:/etc/ngrok.yml:ro
    ports:
      - "4040:4040"  # ngrok web interface
    depends_on:
      - backend
      - frontend
    networks:
      - lotto-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: lotto-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - lotto-network
    command: ["/bin/sh", "-c", "while ! nc -z backend 3001; do sleep 1; done && while ! nc -z frontend 80; do sleep 1; done && nginx -g 'daemon off;'"]

networks:
  lotto-network:
    driver: bridge